#!/bin/bash

if [ "$VESTIGE_VERSION" = "" ]; then
  VESTIGE_VERSION=$(echo $DOCKER_TAG | cut -d "-" -f1)
  if [ "$VESTIGE_VERSION" = "" ]; then
    VESTIGE_VERSION=$(git describe --tags --abbrev=0 --exact-match)
    if [ "$?" -ne 0 ]; then
      echo "Unable to find VESTIGE_VERSION please fix it"
      exit 1
    fi
  fi
fi

OS_TYPE=$(echo $DOCKER_TAG | cut -d "-" -f2)
if [ "$OS_TYPE" = "" ]; then
  OS_TYPE=alpine-jre
fi
if [ "$OS_TYPE" = "alpine" ]; then
  OS_TYPE=alpine-jre
fi


JDK_VERSION=$(echo $DOCKER_TAG | cut -d "-" -f3)

if [ "$JDK_VERSION" = "" ]; then
  JDK_VERSION=openjdk8
fi

if [ "$IMAGE_NAME" = "" ]; then
  IMAGE_NAME=gaellalire/vestige:${VESTIGE_VERSION}-${OS_TYPE/-jre/}-${JDK_VERSION}
fi

rm -rf target

mkdir -p target/vestige

if [ "$VESTIGE_ZIP_PATH" = "" ]; then
  if [ "$VESTIGE_VERSION" = "latest" ]; then
    docker run -i -v "$PWD/target":/data alpine wget https://gaellalire.fr/vestige/latest-zip-unix -O /data/vestige.zip
  else
    docker run -i -v "$PWD/target":/data alpine wget https://gaellalire.fr/nexus/content/repositories/releases/fr/gaellalire/vestige/vestige.assemblies.standard_edition_standalone/${VESTIGE_VERSION}/vestige.assemblies.standard_edition_standalone-${VESTIGE_VERSION}-unix.zip -O /data/vestige.zip
  fi
else
  cp "$(eval echo "$VESTIGE_ZIP_PATH")" $PWD/target/vestige.zip
fi

docker run -i -v "$PWD/target":/data alpine unzip /data/vestige.zip -d /data/vestige

mv "$PWD/target/vestige/repository" "$PWD/target/repository"

# -e 's|VESTIGE_CORE_RELATIVE_DIRECTORY=.*|VESTIGE_CORE_RELATIVE_DIRECTORY="/root/.m2"|'
sed -i~ -e 's/VESTIGE_CONFIG=.*/VESTIGE_CONFIG="${XDG_CONFIG_HOME:-$HOME\/.config}\/vestige"/' -e 's/VESTIGE_DATA=.*/VESTIGE_DATA="${XDG_DATA_HOME:-$HOME\/.local\/share}\/vestige"/' -e 's/VESTIGE_CACHE=.*/VESTIGE_CACHE="${XDG_CACHE_HOME:-$HOME\/.cache}\/vestige"/' "$PWD/target/vestige/vestige"
rm "$PWD/target/vestige/vestige~"

sed -i~ -e "/proxy_vole\.gsettings/d" "$PWD/target/vestige/jvm_enhancer.properties"
rm "$PWD/target/vestige/jvm_enhancer.properties~"

find "$PWD/target/vestige/lib" -name '*.so' -delete

JDK_VERSION_NUMBER=$(echo $JDK_VERSION | sed -r 's/^[^0-9]*([0-9]+).*$/\1/')

if [ "$JDK_VERSION_NUMBER" -le 8 ]; then
  find . -name '*jdk15on*' -prune -exec rm -rf {} \;
else
  find . -name '*6to8*' -prune -exec rm -rf {} \;
  find . -name '*jdk15to18*' -prune -exec rm -rf {} \;
fi

docker build --no-cache --build-arg JDK_VERSION=${JDK_VERSION} --build-arg OS_TYPE=${OS_TYPE} -t ${IMAGE_NAME} .

